@page "/"
@using Newtonsoft.Json;
@using e_commerce.client.Model.Const;
@using e_commerce.client.Model.Request;
@using e_commerce.client.Model.Response;
@using e_commerce.client.Service;
@*@inject Blazored.LocalStorage.ILocalStorageService localStorage*@
@inject NavigationManager NavManager


<div class="card">
    <h4 class="card-header">Login</h4>
    <div class="card-body">
        <EditForm Model="@loginRequest" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label>Username</label>
                <InputText @bind-Value="loginRequest.EmailId" class="form-control" />
                <ValidationMessage For="@(() => loginRequest.EmailId)" />
            </div>
            <div class="form-group">
                <label>Password</label>
                <InputText @bind-Value="loginRequest.Password" type="password" class="form-control" />
                <ValidationMessage For="@(() => loginRequest.Password)" />
            </div>
            <button type="submit">Login</button>
        </EditForm>
    </div>
</div>

@code{
    LoginRequest loginRequest = new LoginRequest();

    //protected override async Task OnInitializedAsync()
    //{
    //    var token = await localStorage.GetItemAsync<string>("token");
    //    TokenResponse.Token = token;
    //    if (token != null && token != "" && token == TokenResponse.Token)
    //    {
    //        NavManager.NavigateTo("/index");
    //    }
    //}

    private async Task OnValidSubmit()
    {
        loginRequest.UniqueId = "984123";
        var result = await AccountService.LoginAPI(loginRequest);
        if(result.meta.statusCode == StatusCodeConsts.Success)
        {
            var response = JsonConvert.DeserializeObject<LoginResponse>(result.data);
            //await localStorage.SetItemAsync("token", response.Token);
            //await localStorage.SetItemAsync("userId", response.Id);
        }
    }
}
